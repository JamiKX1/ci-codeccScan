[
  {
    "checkerName": "AbbreviationAsWordInName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "The Check validate abbreviations(consecutive capital letters) length in identifier name, it also allow in enforce camel case naming.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AbstractClassName",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Ensures that the names of abstract classes conforming to some regular expression and check that abstract modifier exists.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AnnotationLocation",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "注释相关",
    "checkerTypeSort": "14",
    "checkerDesc": "Check location of annotation on language elements.[tencent standards/java 3.85](https://{github.com/xxxxx}/standards/java#385%E5%BF%85%E9%A1%BB%E6%B3%A8%E8%A7%A3)",
    "checkerDescModel": "Check location of annotation on language elements.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AnnotationLocationMostCases",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "注释相关",
    "checkerTypeSort": "14",
    "checkerDesc": "Check location of annotation on language elements.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AnnotationLocationVariables",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "注释相关",
    "checkerTypeSort": "14",
    "checkerDesc": "Check location of annotation on language elements.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AnnotationOnSameLine",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "注释相关",
    "checkerTypeSort": "14",
    "checkerDesc": "The check does verifying that annotations are located on the same line with their targets.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AnnotationUseStyle",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "注释相关",
    "checkerTypeSort": "14",
    "checkerDesc": "This check controls the style with the usage of annotations.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AnonInnerLength",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "长度限制",
    "checkerTypeSort": "4",
    "checkerDesc": "Checks for long anonymous inner classes.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ArrayTrailingComma",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks if array initialization contains optional trailing comma.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ArrayTypeStyle",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Checks the style of array type definitions.[tencent standards/java 3.83](https://{github.com/xxxxx}/standards/java#383%E5%BF%85%E9%A1%BB%E6%95%B0%E7%BB%84)",
    "checkerDescModel": "Checks the style of array type definitions.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AtclauseOrder",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks the order of at-clauses.[tencent standards/java 3.89](https://{github.com/xxxxx}/standards/java#389%E5%8F%AF%E9%80%89java-doc-%E6%B3%A8%E9%87%8A)",
    "checkerDescModel": "Checks the order of at-clauses.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AvoidEscapedUnicodeCharacters",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Restrict using Unicode escapes.[tencent standards/java 2.142](https://{github.com/xxxxx}/standards/java#2142%E5%BF%85%E9%A1%BB%E7%89%B9%E6%AE%8A%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6)",
    "checkerDescModel": "Restrict using Unicode escapes.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AvoidInlineConditionals",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Detects inline conditionals.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AvoidNestedBlocks",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "代码块相关",
    "checkerTypeSort": "5",
    "checkerDesc": "Finds nested blocks.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AvoidStarImport",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Import相关",
    "checkerTypeSort": "0",
    "checkerDesc": "Check that finds import statements that use the * notation.[tencent standards/java 2.231](https://{github.com/xxxxx}/standards/java#2231%E5%BF%85%E9%A1%BBimport%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6)",
    "checkerDescModel": "Check that finds import statements that use the * notation.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "AvoidStaticImport",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Import相关",
    "checkerTypeSort": "0",
    "checkerDesc": "Check that finds static imports.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "BooleanExpressionComplexity",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "复杂度",
    "checkerTypeSort": "6",
    "checkerDesc": "Restricts nested boolean operators (&&, ||, &, | and ^) to a specified depth (default = 3).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "CatchParameterName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that catch parameter names conform to a format specified by the format property.[tencent standards/java 5.1](https://{github.com/xxxxx}/standards/java#51%E6%8E%A8%E8%8D%90%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7)",
    "checkerDescModel": "Checks that catch parameter names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ClassDataAbstractionCoupling",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "复杂度",
    "checkerTypeSort": "6",
    "checkerDesc": "This metric measures the number of instantiations of other classes within the given class.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ClassFanOutComplexity",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "复杂度",
    "checkerTypeSort": "6",
    "checkerDesc": "The number of other classes a given class relies on.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ClassTypeParameterName",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that class type parameter names conform to a format specified by the format property.[tencent standards/java 4.8](https://{github.com/xxxxx}/standards/java#48%E6%8E%A8%E8%8D%90%E6%B3%9B%E5%9E%8B%E5%8F%98%E9%87%8F%E5%90%8D)",
    "checkerDescModel": "Checks that class type parameter names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "CommentRatioCheck",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Checks for a minimum comment ratio(the threshold is 10%).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "腾讯开源"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "CommentsIndentation",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Controls the indentation between comments and surrounding code.[tencent standards/java 3.2](https://{github.com/xxxxx}/standards/java#32%E5%BF%85%E9%A1%BB%E5%9D%97%E7%BC%A9%E8%BF%9B4%E4%B8%AA%E7%A9%BA%E6%A0%BC)",
    "checkerDescModel": "Controls the indentation between comments and surrounding code.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ConstantName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that constant names conform to a format specified by the format property.[tencent standards/java 4.4](https://{github.com/xxxxx}/standards/java#44%E5%BF%85%E9%A1%BB%E5%B8%B8%E9%87%8F%E5%90%8D)",
    "checkerDescModel": "Checks that constant names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "CovariantEquals",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that if a class defines a covariant method equals, then it defines method equals(java.lang.Object).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "CustomImportOrder",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Import相关",
    "checkerTypeSort": "0",
    "checkerDesc": "Checks that the groups of import declarations appear in the order specified by the user.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "CyclomaticComplexity",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "复杂度",
    "checkerTypeSort": "6",
    "checkerDesc": "Checks cyclomatic complexity against a specified limit.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": [
      {
        "propName": "max",
        "propValue": "10",
        "displayValue": "10"
      }
    ]
  },
  {
    "checkerName": "DeclarationOrder",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that the parts of a class or interface declaration appear in the order suggested by the Code Conventions for the Java Programming Language.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "DefaultComesLast",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Check that the default is after all the cases in a switch statement.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "逻辑规则"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "DescendantToken",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Checks for restricted tokens beneath other tokens.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "DesignForExtension",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "类设计",
    "checkerTypeSort": "8",
    "checkerDesc": "Checks that classes are designed for inheritance.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "EmptyBlock",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "代码块相关",
    "checkerTypeSort": "5",
    "checkerDesc": "Checks for empty blocks but does not validate sequential blocks.[tencent standards/java 3.13](https://{github.com/xxxxx}/standards/java#313%E6%8E%A8%E8%8D%90%E7%A9%BA%E5%9D%97%E5%8F%AF%E4%BB%A5%E7%94%A8%E7%AE%80%E6%B4%81%E7%89%88%E6%9C%AC)",
    "checkerDescModel": "Checks for empty blocks but does not validate sequential blocks.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "EmptyCatchBlock",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "代码块相关",
    "checkerTypeSort": "5",
    "checkerDesc": "Checks for empty catch blocks with few options to skip violation.[tencent standards/java 5.1](https://{github.com/xxxxx}/standards/java#51%E6%8E%A8%E8%8D%90%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7)",
    "checkerDescModel": "Checks for empty catch blocks with few options to skip violation.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "EmptyForInitializerPad",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks the padding of an empty for initializer; that is whether a space is required at an empty for initializer, or such spaces are forbidden.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "EmptyForIteratorPad",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks the padding of an empty for iterator; that is whether a space is required at an empty for iterator, or such spaces are forbidden.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "EmptyLineSeparator",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks for blank line separators.[tencent standards/java 2.141](https://{github.com/xxxxx}/standards/java#2141%E5%BF%85%E9%A1%BB%E7%A9%BA%E7%99%BD%E5%AD%97%E7%AC%A6)，[tencent standards/java 3.61](https://{github.com/xxxxx}/standards/java#361%E5%BF%85%E9%A1%BB%E7%A9%BA%E8%A1%8C)",
    "checkerDescModel": "Checks for blank line separators.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "EmptyStatement",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Detects empty statements (standalone ';').",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "EqualsAvoidNull",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that any combination of String literals is on the left side of an equals() comparison.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "EqualsHashCode",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that classes that override equals() also override hashCode().",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "EscapeSequence",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "对于具有特殊转义序列的任何字符(\\b, \\t, \\n, \\f, \\r, \", '及\\)，我们使用它的转义序列，而不是相应的八进制(比如\\012)或Unicode(比如\\u000a)转义。",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ExecutableStatementCount",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "长度限制",
    "checkerTypeSort": "4",
    "checkerDesc": "Restricts the number of executable statements to a specified limit (default = 30).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ExplicitInitialization",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks if any class or object member explicitly initialized to default for its type value (null for object references, zero for numeric types and char and false for boolean.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "FallThrough",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks for fall through in switch statements Finds locations where a case contains Java code - but lacks a break, return, throw or continue statement.[tencent standards/java 3.842](https://{github.com/xxxxx}/standards/java#3842%E5%BF%85%E9%A1%BB%E7%BB%A7%E7%BB%AD%E5%90%91%E4%B8%8B%E6%89%A7%E8%A1%8C%E7%9A%84%E6%B3%A8%E9%87%8A)",
    "checkerDescModel": "Checks for fall through in switch statements Finds locations where a case contains Java code - but lacks a break, return, throw or continue statement.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "FileEncodingCheck",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Checks source files are encoded in UTF-8.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "腾讯开源"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "FileLength",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "长度限制",
    "checkerTypeSort": "4",
    "checkerDesc": "Checks for long source files.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": [
      {
        "propName": "max",
        "propValue": "2000",
        "displayValue": "2000"
      }
    ]
  },
  {
    "checkerName": "FileTabCharacter",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks to see if a file contains a tab character.[tencent standards/java 2.141](https://{github.com/xxxxx}/standards/java#2141%E5%BF%85%E9%A1%BB%E7%A9%BA%E7%99%BD%E5%AD%97%E7%AC%A6)",
    "checkerDescModel": "Checks to see if a file contains a tab character.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "FinalClass",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "类设计",
    "checkerTypeSort": "8",
    "checkerDesc": "Checks that class which has only private constructors is declared as final.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "FinalLocalVariable",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Ensures that local variables that never get their values changed, must be declared final.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "FinalParameters",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Check that method/constructor/catch/foreach parameters are final.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "GenericWhitespace",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks that the whitespace around the Generic tokens < and > are correct to the typical convention.[tencent standards/java 3.62](https://{github.com/xxxxx}/standards/java#362%E5%BF%85%E9%A1%BB%E8%A1%8C%E5%86%85%E7%A9%BA%E6%A0%BC)",
    "checkerDescModel": "Checks that the whitespace around the Generic tokens < and > are correct to the typical convention.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "Header",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "头部相关",
    "checkerTypeSort": "11",
    "checkerDesc": "Checks the header of the source against a fixed header file.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "HiddenField",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that a local variable or a parameter does not shadow a field that is defined in the same class.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "HideUtilityClassConstructor",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "类设计",
    "checkerTypeSort": "8",
    "checkerDesc": "Make sure that utility classes (classes that contain only static methods) do not have a public constructor.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "IllegalCatch",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Catching java.lang.Exception, java.lang.Error or java.lang.RuntimeException is almost never acceptable.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "IllegalImport",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Import相关",
    "checkerTypeSort": "0",
    "checkerDesc": "Checks for imports from a set of illegal packages.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "IllegalInstantiation",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks for illegal instantiations where a factory method is preferred.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "IllegalThrows",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Throwing java.lang.Error or java.lang.RuntimeException is almost never acceptable.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "IllegalToken",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks for illegal tokens.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "IllegalTokenText",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks for illegal token text.[tencent standards/java 3.73](https://{github.com/xxxxx}/standards/java#373%E5%BF%85%E9%A1%BB%E6%89%80%E6%9C%89%E5%85%B6%E4%BB%96%E6%95%B0%E5%AD%97%E5%89%8D%E7%BC%80%E4%B8%AD%E7%BC%80%E5%92%8C%E5%90%8E%E7%BC%80%E5%9D%87%E5%BA%94%E4%BD%BF%E7%94%A8%E5%B0%8F%E5%86%99%E5%AD%97%E6%AF%8D)",
    "checkerDescModel": "Checks for illegal token text.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "IllegalType",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that particular classes or interfaces are never used.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ImportOrder",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Import相关",
    "checkerTypeSort": "0",
    "checkerDesc": "Ensures that groups of imports come in a specific order.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "Indentation",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Checks correct indentation of Java Code.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": [
      {
        "propName": "throwsIndent",
        "propValue": "8",
        "displayValue": "8"
      },
      {
        "propName": "lineWrappingIndentation",
        "propValue": "8",
        "displayValue": "8"
      }
    ]
  },
  {
    "checkerName": "InnerAssignment",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks for assignments in subexpressions, such as in String s = Integer.toString(i = 2);.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "InnerTypeLast",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "类设计",
    "checkerTypeSort": "8",
    "checkerDesc": "Check nested (internal) classes/interfaces are declared at the bottom of the class after all method and field declarations.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "InterfaceIsType",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "类设计",
    "checkerTypeSort": "8",
    "checkerDesc": "Implements Bloch, Effective Java, Item 17 - Use Interfaces only to define types.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "InterfaceTypeParameterName",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that interface type parameter names conform to a format specified by the format property.[tencent standards/java 4.8](https://{github.com/xxxxx}/standards/java#48%E6%8E%A8%E8%8D%90%E6%B3%9B%E5%9E%8B%E5%8F%98%E9%87%8F%E5%90%8D)",
    "checkerDescModel": "Checks that interface type parameter names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "InvalidJavadocPosition",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks that Javadocs are located at the correct position.[tencent standards/java 3.89](https://{github.com/xxxxx}/standards/java#389%E5%8F%AF%E9%80%89java-doc-%E6%B3%A8%E9%87%8A)",
    "checkerDescModel": "Checks that Javadocs are located at the correct position.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "JavaNCSS",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "复杂度",
    "checkerTypeSort": "6",
    "checkerDesc": "This check calculates the Non Commenting Source Statements (NCSS) metric for Java source files and methods.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "JavadocMethod",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks the Javadoc of a method or constructor.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "JavadocPackage",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks that all packages have a package documentation.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "JavadocParagraph",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks Javadoc paragraphs.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "JavadocStyle",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Custom Checkstyle Check to validate Javadoc.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "JavadocTagContinuationIndentation",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks the indentation of the continuation lines in at-clauses.[tencent standards/java 3.89](https://{github.com/xxxxx}/standards/java#389%E5%8F%AF%E9%80%89java-doc-%E6%B3%A8%E9%87%8A)",
    "checkerDescModel": "Checks the indentation of the continuation lines in at-clauses.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "JavadocType",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks the Javadoc of a type.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "JavadocVariable",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks that a variable has Javadoc comment.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "LambdaParameterName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Check to verify lambda parameter names.[tencent standards/java 3.86](https://{github.com/xxxxx}/standards/java#386%E5%BF%85%E9%A1%BBlambda%E8%A1%A8%E8%BE%BE%E5%BC%8F)",
    "checkerDescModel": "Check to verify lambda parameter names.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "LeftCurly",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "代码块相关",
    "checkerTypeSort": "5",
    "checkerDesc": "Checks the placement of left curly braces on types, methods and other blocks:[tencent standards/java 3.12](https://{github.com/xxxxx}/standards/java#312%E5%BF%85%E9%A1%BB%E9%9D%9E%E7%A9%BA%E5%9D%97k-r-%E9%A3%8E%E6%A0%BC)",
    "checkerDescModel": "Checks the placement of left curly braces on types, methods and other blocks:",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "LicenseCheck",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "头部相关",
    "checkerTypeSort": "11",
    "checkerDesc": "Checks license headers are present in source files.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "腾讯开源"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "LineLength",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "长度限制",
    "checkerTypeSort": "4",
    "checkerDesc": "Checks for long lines.[tencent standards/java 3.4](https://{github.com/xxxxx}/standards/java#34%E5%BF%85%E9%A1%BB%E8%A1%8C%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6)",
    "checkerDescModel": "Checks for long lines.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": [
      {
        "propName": "max",
        "propValue": "100",
        "displayValue": "100"
      }
    ]
  },
  {
    "checkerName": "LineLength-tosa",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "长度限制",
    "checkerTypeSort": "4",
    "checkerDesc": "Checks for long lines(the default threshold is 120).",
    "checkerDescModel": "Checks for long lines(the default threshold is %s).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "腾讯开源"
    ],
    "checkerProps": [
      {
        "propName": "max",
        "propValue": "120",
        "displayValue": "120"
      }
    ]
  },
  {
    "checkerName": "LineSeparatorCheck",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks correct line separator style(use LF, no CR).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "腾讯开源"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "LocalFinalVariableName",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that local final variable names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "LocalVariableName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that local, non-final variable names conform to a format specified by the format property.[tencent standards/java 4.7](https://{github.com/xxxxx}/standards/java#47%E5%BF%85%E9%A1%BB%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E5%90%8D)",
    "checkerDescModel": "Checks that local, non-final variable names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MagicNumber",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks for magic numbers.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MemberName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that instance variable names conform to a format specified by the format property.[tencent standards/java 4.5](https://{github.com/xxxxx}/standards/java#45%E5%BF%85%E9%A1%BB%E9%9D%9E%E5%B8%B8%E9%87%8F%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F)",
    "checkerDescModel": "Checks that instance variable names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MethodCount",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "长度限制",
    "checkerTypeSort": "4",
    "checkerDesc": "Checks the number of methods declared in each type declaration by access modifier or total count.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": [
      {
        "propName": "maxTotal",
        "propValue": "100",
        "displayValue": "100"
      }
    ]
  },
  {
    "checkerName": "MethodLength",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "长度限制",
    "checkerTypeSort": "4",
    "checkerDesc": "Checks for long methods(the default threshold is 150).",
    "checkerDescModel": "Checks for long methods(the default threshold is %s).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": [
      {
        "propName": "max",
        "propValue": "150",
        "displayValue": "150"
      }
    ]
  },
  {
    "checkerName": "MethodName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that method names conform to a format specified by the format property.[tencent standards/java 4.3](https://{github.com/xxxxx}/standards/java#43%E5%BF%85%E9%A1%BB%E6%96%B9%E6%B3%95%E5%90%8D)",
    "checkerDescModel": "Checks that method names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MethodName-tosa",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that method names conform to a format specified by the format property(The function name has no more than 35 characters).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "腾讯开源"
    ],
    "checkerProps": [
      {
        "propName": "format",
        "propValue": "^[a-zA-Z0-9_]{1,35}$",
        "displayValue": "^[a-zA-Z0-9_]{1,35}$"
      }
    ]
  },
  {
    "checkerName": "MethodParamPad",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks the padding between the identifier of a method definition, constructor definition, method call, or constructor invocation; and the left parenthesis of the parameter list.[tencent standards/java 3.62](https://{github.com/xxxxx}/standards/java#362%E5%BF%85%E9%A1%BB%E8%A1%8C%E5%86%85%E7%A9%BA%E6%A0%BC)",
    "checkerDescModel": "Checks the padding between the identifier of a method definition, constructor definition, method call, or constructor invocation; and the left parenthesis of the parameter list.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MethodTypeParameterName",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that class type parameter names conform to a format specified by the format property.[tencent standards/java 4.8](https://{github.com/xxxxx}/standards/java#48%E6%8E%A8%E8%8D%90%E6%B3%9B%E5%9E%8B%E5%8F%98%E9%87%8F%E5%90%8D)",
    "checkerDescModel": "Checks that class type parameter names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MissingCtor",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that classes (except abstract one) define a ctor and don't rely on the default one.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MissingDeprecated",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "注释相关",
    "checkerTypeSort": "14",
    "checkerDesc": "This class is used to verify that both the java.lang.Deprecated annotation is present and the @deprecated Javadoc tag is present when either is present.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MissingJavadocMethod",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks for missing Javadoc comments for a method or constructor.[tencent standards/java 3.89](https://{github.com/xxxxx}/standards/java#389%E5%8F%AF%E9%80%89java-doc-%E6%B3%A8%E9%87%8A)",
    "checkerDescModel": "Checks for missing Javadoc comments for a method or constructor.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MissingOverride",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "注释相关",
    "checkerTypeSort": "14",
    "checkerDesc": "This class is used to verify that the java.lang.Override annotation is present when the {@inheritDoc} javadoc tag is present.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MissingSwitchDefault",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that switch statement has \"default\" clause.[tencent standards/java 3.843](https://{github.com/xxxxx}/standards/java#3843%E5%BF%85%E9%A1%BBdefault-%E9%9C%80%E8%A6%81%E5%AD%98%E5%9C%A8)",
    "checkerDescModel": "Checks that switch statement has \"default\" clause.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ModifiedControlVariable",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Check for ensuring that for loop control variables are not modified inside the for block.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ModifierOrder",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "修饰符",
    "checkerTypeSort": "12",
    "checkerDesc": "Checks that the order of modifiers conforms to the suggestions in the Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3.[tencent standards/java 3.88](https://{github.com/xxxxx}/standards/java#388%E6%8E%A8%E8%8D%90%E4%BF%AE%E9%A5%B0%E7%AC%A6)",
    "checkerDescModel": "Checks that the order of modifiers conforms to the suggestions in the Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MultipleStringLiterals",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks for multiple occurrences of the same string literal within a single file.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MultipleVariableDeclarations",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that each variable declaration is in its own statement and on its own line.[tencent standards/java 3.82](https://{github.com/xxxxx}/standards/java#382%E5%BF%85%E9%A1%BB%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E)",
    "checkerDescModel": "Checks that each variable declaration is in its own statement and on its own line.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "MutableException",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "类设计",
    "checkerTypeSort": "8",
    "checkerDesc": "Ensures that exceptions (defined as any class name conforming to some regular expression) are immutable.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "NPathComplexity",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "复杂度",
    "checkerTypeSort": "6",
    "checkerDesc": "Checks the npath complexity against a specified limit (default = 200).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "NeedBraces",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "代码块相关",
    "checkerTypeSort": "5",
    "checkerDesc": "Checks for braces around code blocks.[tencent standards/java 3.11](https://{github.com/xxxxx}/standards/java#311%E5%BF%85%E9%A1%BB%E4%BD%BF%E7%94%A8%E5%A4%A7%E6%8B%AC%E5%8F%B7)",
    "checkerDescModel": "Checks for braces around code blocks.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "NestedForDepth",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Restricts nested for blocks to a specified depth (default = 2).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": [
      {
        "propName": "max",
        "propValue": "2",
        "displayValue": "2"
      }
    ]
  },
  {
    "checkerName": "NestedIfDepth",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Restricts nested if-else blocks to a specified depth (default = 3).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": [
      {
        "propName": "max",
        "propValue": "3",
        "displayValue": "3"
      }
    ]
  },
  {
    "checkerName": "NestedTryDepth",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Restricts nested try-catch-finally blocks to a specified depth (default = 1).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": [
      {
        "propName": "max",
        "propValue": "1",
        "displayValue": "1"
      }
    ]
  },
  {
    "checkerName": "NewlineAtEndOfFile",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Checks that there is a newline at the end of each file.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "NoClone",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that the clone method is not overridden from the Object class.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "NoFinalizer",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that no method having zero parameters is defined using the name finalize.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "NoLineWrap",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks that chosen statements are not line-wrapped.[tencent standards/java 2.232](https://{github.com/xxxxx}/standards/java#2232%E5%BF%85%E9%A1%BBimport%E4%B8%8D%E8%A6%81%E6%8D%A2%E8%A1%8C)",
    "checkerDescModel": "Checks that chosen statements are not line-wrapped.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "NoWhitespaceAfter",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks that there is no whitespace after a token.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "NoWhitespaceBefore",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks that there is no whitespace before a token.[tencent standards/java 3.62](https://{github.com/xxxxx}/standards/java#362%E5%BF%85%E9%A1%BB%E8%A1%8C%E5%86%85%E7%A9%BA%E6%A0%BC)",
    "checkerDescModel": "Checks that there is no whitespace before a token.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "NonEmptyAtclauseDescription",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks that the at-clause tag is followed by description .",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "OneStatementPerLine",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that there is only one statement per line.[tencent standards/java 3.3](https://{github.com/xxxxx}/standards/java#33%E5%BF%85%E9%A1%BB%E4%B8%80%E8%A1%8C%E6%9C%80%E5%A4%9A%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5)",
    "checkerDescModel": "Checks that there is only one statement per line.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "OneTopLevelClass",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "类设计",
    "checkerTypeSort": "8",
    "checkerDesc": "Checks that each top-level class, interfaces or enum resides in a source file of its own.[tencent standards/java 2.241](https://{github.com/xxxxx}/standards/java#2241%E5%BF%85%E9%A1%BB%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E9%A1%B6%E7%BA%A7%E7%B1%BB%E5%A3%B0%E6%98%8E)",
    "checkerDescModel": "Checks that each top-level class, interfaces or enum resides in a source file of its own.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "OperatorWrap",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks line wrapping for operators.[tencent standards/java 3.5](https://{github.com/xxxxx}/standards/java#35%E5%BF%85%E9%A1%BB%E9%95%BF%E8%A1%8C%E6%96%AD%E8%A1%8C)",
    "checkerDescModel": "Checks line wrapping for operators.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": [
      {
        "propName": "tokens",
        "propValue": "BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF",
        "displayValue": "BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF"
      }
    ]
  },
  {
    "checkerName": "OuterTypeFilename",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Checks that the outer type name and the file name match.[tencent standards/java 2.11](https://{github.com/xxxxx}/standards/java#211%E5%BF%85%E9%A1%BB%E6%96%87%E4%BB%B6%E5%90%8D)",
    "checkerDescModel": "Checks that the outer type name and the file name match.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "OuterTypeNumber",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "长度限制",
    "checkerTypeSort": "4",
    "checkerDesc": "Checks for the number of defined types at the \"outer\" level.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "OverloadMethodsDeclarationOrder",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that overload methods are grouped together.[tencent standards/java 2.243](https://{github.com/xxxxx}/standards/java#2243%E5%BF%85%E9%A1%BB%E9%87%8D%E8%BD%BD%E6%96%B9%E6%B3%95%E4%B8%8D%E5%BA%94%E8%AF%A5%E5%88%86%E5%BC%80)",
    "checkerDescModel": "Checks that overload methods are grouped together.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "PackageAnnotation",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "注释相关",
    "checkerTypeSort": "14",
    "checkerDesc": "This check makes sure that all package annotations are in the package-info.java file.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "PackageDeclaration",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Ensures there is a package declaration and (optionally) in the correct directory.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "PackageName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that package names conform to a format specified by the format property.[tencent standards/java 4.1](https://{github.com/xxxxx}/standards/java#41%E5%BF%85%E9%A1%BB%E5%8C%85%E5%90%8D)",
    "checkerDescModel": "Checks that package names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ParameterAssignment",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Disallow assignment of parameters.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "逻辑规则"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ParameterName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that parameter names conform to a format specified by the format property.[tencent standards/java 4.6](https://{github.com/xxxxx}/standards/java#46%E5%BF%85%E9%A1%BB%E5%8F%82%E6%95%B0%E5%90%8D)",
    "checkerDescModel": "Checks that parameter names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ParameterNumber",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "长度限制",
    "checkerTypeSort": "4",
    "checkerDesc": "Checks the number of parameters that a method or constructor has.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ParenPad",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks the padding of parentheses; that is whether a space is required after a left parenthesis and before a right parenthesis, or such spaces are forbidden, with the exception that it does not check for padding of the right parenthesis at an empty for iterator.[tencent standards/java 3.62](https://{github.com/xxxxx}/standards/java#362%E5%BF%85%E9%A1%BB%E8%A1%8C%E5%86%85%E7%A9%BA%E6%A0%BC)",
    "checkerDescModel": "Checks the padding of parentheses; that is whether a space is required after a left parenthesis and before a right parenthesis, or such spaces are forbidden, with the exception that it does not check for padding of the right parenthesis at an empty for iterator.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RedundantImport",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Import相关",
    "checkerTypeSort": "0",
    "checkerDesc": "Checks for imports that are redundant.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RedundantModifier",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "修饰符",
    "checkerTypeSort": "12",
    "checkerDesc": "Checks for redundant modifiers in interface and annotation definitions, final modifier on methods of final classes, inner interface declarations that are declared as static, non public class constructors and enum constructors, nested enum definitions that are declared as static.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "Regexp",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "正则相关",
    "checkerTypeSort": "13",
    "checkerDesc": "A check that makes sure that a specified pattern exists (or not) in the file.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RegexpHeader",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "头部相关",
    "checkerTypeSort": "11",
    "checkerDesc": "Checks the header of a java source file against a header that contains a regular expression for each line of the source header.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RegexpMultiline",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "正则相关",
    "checkerTypeSort": "13",
    "checkerDesc": "Implementation of a check that looks that matches across multiple lines in any file type.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RegexpOnFilename",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "正则相关",
    "checkerTypeSort": "13",
    "checkerDesc": "Implementation of a check that matches based on file and/or folder path.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RegexpSingleline",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "正则相关",
    "checkerTypeSort": "13",
    "checkerDesc": "Implementation of a check that looks for a single line in any file type.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RegexpSinglelineJava",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "正则相关",
    "checkerTypeSort": "13",
    "checkerDesc": "Implementation of a check that looks for a single line in Java files.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RequireThis",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that code doesn't rely on the \"this\" default.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ReturnCount",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Restricts return statements to a specified count (default = 2).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RightCurly",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "代码块相关",
    "checkerTypeSort": "5",
    "checkerDesc": "Checks the placement of right curly braces.[tencent standards/java 3.12](https://{github.com/xxxxx}/standards/java#312%E5%BF%85%E9%A1%BB%E9%9D%9E%E7%A9%BA%E5%9D%97k-r-%E9%A3%8E%E6%A0%BC)",
    "checkerDescModel": "Checks the placement of right curly braces.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RightCurlyAlone",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "代码块相关",
    "checkerTypeSort": "5",
    "checkerDesc": "Checks the placement of right curly braces.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "RightCurlySame",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "代码块相关",
    "checkerTypeSort": "5",
    "checkerDesc": "Checks the placement of right curly braces.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SeparatorWrap",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks line wrapping with separators.[tencent standards/java 3.5](https://{github.com/xxxxx}/standards/java#35%E5%BF%85%E9%A1%BB%E9%95%BF%E8%A1%8C%E6%96%AD%E8%A1%8C)",
    "checkerDescModel": "Checks line wrapping with separators.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SeparatorWrapArrayDeclarator",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks line wrapping with separators Array Declarator.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SeparatorWrapComma",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks line wrapping with separators COMMA.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SeparatorWrapDot",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks line wrapping with separators DOT.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SeparatorWrapEllipsis",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks line wrapping with separators Ellipsis.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SeparatorWrapMethodRef",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks line wrapping with Method Ref.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SimplifyBooleanExpression",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks for overly complicated boolean expressions.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SimplifyBooleanReturn",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks for overly complicated boolean return statements.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SingleLineJavadoc",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks that a JavaDoc block which can fit on a single line and doesn't contain at-clauses [tencent standards/java 3.89](https://{github.com/xxxxx}/standards/java#389%E5%8F%AF%E9%80%89java-doc-%E6%B3%A8%E9%87%8A)",
    "checkerDescModel": "Checks that a JavaDoc block which can fit on a single line and doesn't contain at-clauses",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SingleSpaceSeparator",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks that non-whitespace characters are separated by no more than one whitespace.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SpaceIndentationCheck",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Checks consistent spaces indentation(the default threshold is 4).",
    "checkerDescModel": "Checks consistent spaces indentation(the default threshold is %s).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "USER_DEFINED",
    "checkerTag": [
      "腾讯开源"
    ],
    "checkerProps": [
      {
        "propName": "basicOffset",
        "propValue": "4",
        "displayValue": "4"
      }
    ]
  },
  {
    "checkerName": "StaticVariableName",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that static, non-final variable names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "StringLiteralEquality",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that string literals are not used with == or !=.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SummaryJavadoc",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Checks that Javadoc summary sentence does not contain phrases that are not recommended to use.[tencent standards/java 3.89](https://{github.com/xxxxx}/standards/java#389%E5%8F%AF%E9%80%89java-doc-%E6%B3%A8%E9%87%8A)",
    "checkerDescModel": "Checks that Javadoc summary sentence does not contain phrases that are not recommended to use.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SuperClone",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that an overriding clone() method invokes super.clone().",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SuperFinalize",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks that an overriding finalize() method invokes super.finalize().",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "SuppressWarnings",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "注释相关",
    "checkerTypeSort": "14",
    "checkerDesc": "This check allows you to specify what warnings that",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "ThrowsCount",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "类设计",
    "checkerTypeSort": "8",
    "checkerDesc": "Restricts throws statements to a specified count (default = 4).",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "TodoComment",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "A check for TODO comments.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "TrailingComment",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "The check to ensure that requires that comments be the only thing on a line.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "Translation",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "The TranslationCheck class helps to ensure the correct translation of code by checking property files for consistency regarding their keys.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "TypeName",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "命名规范",
    "checkerTypeSort": "9",
    "checkerDesc": "Checks that type names conform to a format specified by the format property.[tencent standards/java 4.2](https://{github.com/xxxxx}/standards/java#42%E5%BF%85%E9%A1%BB%E7%B1%BB%E5%90%8D)",
    "checkerDescModel": "Checks that type names conform to a format specified by the format property.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "TypecastParenPad",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks the padding of parentheses for typecasts.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "UncommentedMain",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Detects uncommented main methods.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "UniqueProperties",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Detects duplicated keys in properties files.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "UnnecessaryParentheses",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks if unnecessary parentheses are used in a statement or expression.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "UnusedImports",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Import相关",
    "checkerTypeSort": "0",
    "checkerDesc": "Checks for unused import statements.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "UpperEll",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "其他",
    "checkerTypeSort": "10",
    "checkerDesc": "Checks that long constants are defined with an upper ell.[tencent standards/java 3.71](https://{github.com/xxxxx}/standards/java#371%E5%BF%85%E9%A1%BBlong%E5%BA%94%E4%BD%BF%E7%94%A8%E5%A4%A7%E5%86%99%E5%AD%97%E6%AF%8Dl%E5%90%8E%E7%BC%80)",
    "checkerDescModel": "Checks that long constants are defined with an upper ell.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "VariableDeclarationUsageDistance",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "编程相关",
    "checkerTypeSort": "3",
    "checkerDesc": "Checks the distance between declaration of variable and its first usage.[tencent standards/java 3.82](https://{github.com/xxxxx}/standards/java#382%E5%BF%85%E9%A1%BB%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E)",
    "checkerDescModel": "Checks the distance between declaration of variable and its first usage.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_DEFAULT",
    "checkerTag": [
      "系统推荐"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "VisibilityModifier",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "类设计",
    "checkerTypeSort": "8",
    "checkerDesc": "Checks visibility of class members.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "最佳实践"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "WhitespaceAfter",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks that a token is followed by whitespace, with the exception that it does not check for whitespace after the semicolon of an empty for iterator.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "WhitespaceAround",
    "severity": 1,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "空格相关",
    "checkerTypeSort": "7",
    "checkerDesc": "Checks that a token is surrounded by whitespace.[tencent standards/java 3.62](https://{github.com/xxxxx}/standards/java#362%E5%BF%85%E9%A1%BB%E8%A1%8C%E5%86%85%E7%A9%BA%E6%A0%BC)",
    "checkerDescModel": "Checks that a token is surrounded by whitespace.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "WriteTag",
    "severity": 3,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "Javadoc注释",
    "checkerTypeSort": "1",
    "checkerDesc": "Outputs a JavaDoc tag as information.",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "onesdk.ClassMemberNaming",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "OneSDK编码规范",
    "checkerTypeSort": "2",
    "checkerDesc": "检查函数成员变量是否符合Camel命名规范，且以m开头，没有则给出告警",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "onesdk.EnumNaming",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "OneSDK编码规范",
    "checkerTypeSort": "2",
    "checkerDesc": "检查枚举名称是否符合Pascal命名规范，枚举值是否全部大写，没有则给出告警",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "onesdk.FinalMemberNaming",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "OneSDK编码规范",
    "checkerTypeSort": "2",
    "checkerDesc": "检查final成员命名是否全部大写，否则给出告警",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "onesdk.HeaderComment",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "OneSDK编码规范",
    "checkerTypeSort": "2",
    "checkerDesc": "检查文件头是否包含Version、Module、Author字段注释，没有则给出告警",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "onesdk.InterfaceNaming",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "OneSDK编码规范",
    "checkerTypeSort": "2",
    "checkerDesc": "检查接口名称是否符合Pascal命名规范，且以I开头，否则给出告警",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "onesdk.MethodNaming",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "OneSDK编码规范",
    "checkerTypeSort": "2",
    "checkerDesc": "检查函数名称是否符合Camel命名规范，没有则给出告警",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "onesdk.MethodParamNaming",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "OneSDK编码规范",
    "checkerTypeSort": "2",
    "checkerDesc": "检查函数参数是否符合Camel命名规范，没有则给出告警",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  },
  {
    "checkerName": "onesdk.PackageNaming",
    "severity": 2,
    "checkerCategory": "CODE_FORMAT",
    "checkerType": "OneSDK编码规范",
    "checkerTypeSort": "2",
    "checkerDesc": "检查package名称是否包含com.tencent.gcloud，没有则给出告警",
    "checkerLanguage": [
      "JAVA"
    ],
    "checkerRecommend": "SYSTEM_RECOMMEND",
    "checkerTag": [
      "风格规范"
    ],
    "checkerProps": []
  }
]
