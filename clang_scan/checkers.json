[
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for logical errors for function calls and Objective-C message expressions",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-CallAndMessage",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for division by zero",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-DivideZero",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Generate dynamic type information",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-DynamicTypePropagation",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for null pointers passed as arguments to a function whose arguments are references or marked with the ‘nonnull’ attribute.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-NonNullParamChecker",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Assume that const string-like globals are non-null.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-NonnilStringConstants",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for dereferences of null pointers.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-NullDereference",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check that addresses to stack memory do not escape the function.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-StackAddressEscape",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for undefined results of binary operators.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-UndefinedBinaryOperatorResult",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for declarations of Variable Length Arrays of undefined or zero size.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-VLASize",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Evaluate compiler builtin functions (e.g., alloca()).",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-builtin-BuiltinFunctions",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Evaluate 'panic' functions that are known to not return to the caller.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-builtin-NoReturnFunctions",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for uninitialized values used as array subscripts.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-uninitialized-ArraySubscript",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for assigning uninitialized values.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-uninitialized-Assign",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for uninitialized values used as branch conditions.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-uninitialized-Branch",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for blocks that capture uninitialized values.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-uninitialized-CapturedBlockVariable",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for uninitialized values being returned to the caller.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "core-uninitialized-UndefReturn",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for inner pointers of C++ containers used after re/deallocation.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "cplusplus-InnerPointer",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Find use-after-move bugs in C++",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "cplusplus-Move",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for double-free and use-after-free problems. Traces memory managed by new/delete.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "cplusplus-NewDelete",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for memory leaks. Traces memory managed by new/delete.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "cplusplus-NewDeleteLeaks",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Checks C++ copy and move assignment operators for self assignment.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "cplusplus-SelfAssignment",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for values stored to variables that are never read afterwards.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "deadcode-DeadStores",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warns when a null pointer is passed to a pointer which has a _Nonnull type.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "nullability-NullPassedToNonnull",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warns when a null pointer is returned from a function that has _Nonnull return type.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "nullability-NullReturnedFromNonnull",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warns when a nullable pointer is dereferenced.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "nullability-NullableDereferenced",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warns when a nullable pointer is passed to a pointer which has a _Nonnull type.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "nullability-NullablePassedToNonnull",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warns when a nullable pointer is returned from a function that has _Nonnull return type.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "nullability-NullableReturnedFromNonnull",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check virtual function calls during construction or destruction.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "optin-cplusplus-VirtualCall",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Checks MPI code.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "optin-mpi-MPI--Checker",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check that NSLocalizedString macros include a comment for context.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "optin-osx-cocoa-localizability-EmptyLocalizationContextChecker",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warns about uses of non-localized NSStrings passed to UI methods expecting localized NSStrings.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "optin-osx-cocoa-localizability-NonLocalizedStringChecker",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for performance anti-patterns when using Grand Central Dispatch.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "optin-performance-GCDAntipattern",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for excessively padded structs.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "optin-performance-Padding",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Finds implementation-defined behavior in UNIX/Posix functions.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "optin-portability-UnixAPI",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for proper uses of various Apple APIs.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-API",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for erroneous conversions of objects representing numbers into numbers.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-NumberObjectConversion",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for leaks and improper reference count management for OSObject.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-OSObjectRetainCount",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for proper uses of Objective-C properties.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-ObjCProperty",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for proper uses of Secure Keychain APIs.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-SecKeychainAPI",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for nil pointers used as mutexes for @synchronized.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-AtSync",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn about potentially crashing writes to autoreleasing objects from different autoreleasing pools in Objective-C.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-AutoreleaseWrite",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for sending ‘retain’, ‘release’, or ‘autorelease’ directly to a Class.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-ClassRelease",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn about Objective-C classes that lack a correct implementation of -dealloc.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-Dealloc",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn about Objective-C method signatures with type incompatibilities.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-IncompatibleMethodTypes",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Improved modeling of loops using Cocoa collection types.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-Loops",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn about Objective-C methods that lack a necessary call to super.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-MissingSuperCall",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn for suboptimal uses of NSAutoreleasePool in Objective-C GC mode.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-NSAutoreleasePool",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check usage of NSError parameters.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-NSError",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for prohibited nil arguments to ObjC method calls.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-NilArg",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Models the APIs that are guaranteed to return a non-nil value.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-NonNilReturnValue",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for type errors when using Objective-C generics.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-ObjCGenerics",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for leaks and improper reference count management.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-RetainCount",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for leaked memory in autorelease pools that will never be drained.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-RunLoopAutoreleaseLeak",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check that ‘self’ is properly initialized inside an initializer method.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-SelfInit",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn about improper use of ‘[super dealloc]’ in Objective-C.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-SuperDealloc",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn about private ivars that are never used.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-UnusedIvars",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for passing non-Objective-C types to variadic collection initialization methods that expect only Objective-C types.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-cocoa-VariadicMethodTypes",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check usage of CFErrorRef* parameters.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-coreFoundation-CFError",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for proper uses of CFNumber APIs.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-coreFoundation-CFNumber",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for null arguments to CFRetain/CFRelease/CFMakeCollectable.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-coreFoundation-CFRetainRelease",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Checks for index out-of-bounds when using ‘CFArray’ API.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-coreFoundation-containers-OutOfBounds",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warns if ‘CFArray’, ‘CFDictionary’, ‘CFSet’ are created with non-pointer-size values.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "osx-coreFoundation-containers-PointerSizedValues",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on using a floating point value as a loop counter (CERT: FLP30-C, FLP30-CPP).",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-FloatLoopCounter",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of functions whose return values must be always checked.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-UncheckedReturn",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of the ‘bcmp’ function.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-bcmp",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of the ‘bcopy’ function.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-bcopy",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of the ‘bzero’ function.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-bzero",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of the 'getpw' function.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-getpw",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of the 'gets' function.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-gets",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn when 'mkstemp' is passed fewer than 6 X's in the format string.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-mkstemp",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of the 'mktemp' function.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-mktemp",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of the 'rand', 'random', and related functions.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-rand",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of the strcpy and strcat functions.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-strcpy",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Warn on uses of the ‘vfork’ function.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "security-insecureAPI-vfork",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check calls to various UNIX/Posix functions: open, pthread_once, calloc, malloc, realloc, alloca.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "unix-API",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for memory leaks, double free, and use-after-free problems. Traces memory managed by malloc()/free().",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "unix-Malloc",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for dubious malloc arguments involving sizeof.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "unix-MallocSizeof",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for mismatched deallocators.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "unix-MismatchedDeallocator",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for proper usage of vfork.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "unix-Vfork",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check the size argument passed into C string functions for common erroneous patterns. Use -Wno-strncat-size compiler option to mute other strncat-related compiler warnings.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "unix-cstring-BadSizeArg",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for null pointers being passed as arguments to C string functions: strlen, strnlen, strcpy, strncpy, strcat, strncat, strcmp, strncmp, strcasecmp, strncasecmp.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "unix-cstring-NullArg",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for va_lists which are copied onto itself.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "valist-CopyToSelf",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for usages of uninitialized (or already released) va_lists.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "valist-Uninitialized",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    },
    {
        "checkerCategory": "CODE_DEFECT",
        "checkerDesc": "Check for va_lists which are not released by a va_end call.",
        "checkerLanguage": [
            "OC"
        ],
        "checkerName": "valist-Unterminated",
        "checkerRecommend": "SYSTEM_DEFAULT",
        "checkerTag": [
            "潜在的错误"
        ],
        "errExample": "",
        "rightExample": "",
        "severity": "1"
    }
]